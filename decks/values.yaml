---
# Default values for ecs-flex.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# These global settings relate to DECKS
global:
  # Name of a Kubernetes secret with Docker credentials for the private registry
  # registrySecret: dockerhub-registry-secret

  # The private docker registry hosting containers for ECS Flex
  # registry: harbor
  # registry: harbor.lss.emc.com/ecs
  registry: emccorp

  # Default: true == Watch ALL namespaces
  watchAllNamespaces: true

  # Platform:
  platform: Default

# The default docker tag and pull policy for the DECKS
tag: 2.82.0-1302
pullPolicy: IfNotPresent

# The number of replicas for the DECKS deployment
replicaCount: 1

# The image configured for the DECKS
image:
  repository: decks
  tag: 2.81.0-231.a3a794c # rfw-update-this decks-image
  # pullPolicy: IfNotPresent

## Allow callers to bypass creating app resource
createdecksappResource: true

#  username: admin
#  password: ChangeMe

# decks helm test configuration
# this image is the test image for DECKS. It will run as "helm test" to verify the DECKS functionality as a black box
helmTestConfig:
  testImage:
    repository: decks-testapp
    # tag: stable
    # pullPolicy: IfNotPresent
  srsGateway:
    # The login setting configures the user/password credentials
    # for registering a product with the test SRS gateway
    # login: "testuser123@example.com:MyFavePassword"
    # The gateway hostname can be an IP address or an FQDN
    # hostname: "10.11.12.13"
    port: 9443

# We usually recommend not to specify default resources and to leave this as a conscious
# choice for the user. This also increases chances charts run on environments with little
# resources, such as Minikube. If you do want to specify resources, uncomment the following
# lines, adjust them as necessary, and remove the curly braces after 'resources:'.
resources: {}
# limits:
#  cpu: 100m
#  memory: 128Mi
# requests:
#  cpu: 100m
#  memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}

### new for decks 1.1 - replace webdav with nginx based supportStore
supportStore:
  enabled: true
  # 720 minutes - every 12 hours decks should purge all the aged files
  gcPollingInterval: 720
  # 15 days old files from decks-support-store should be removed
  gcFileAgeToRemove: 15

# KAHM health check configuration
healthChecks:
  preUpdate:
    image:
      repository: objectscale-component-pre-update
      tag: 0.81.0-72.5dc9ce4 # rfw-update-this objectscale-component-pre-update-image
