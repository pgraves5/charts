---
{{- if and  (.Values.started) (.Values.global.started) }}
apiVersion: "ecs.dellemc.com/v1beta1"
kind: "ECSCluster"
metadata:
  name: {{ .Release.Name }}
  namespace: {{ .Release.Namespace}}
  labels:
    app.kubernetes.io/name: {{ .Release.Name }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/version: {{ .Chart.AppVersion }}
    app.kubernetes.io/part-of: {{ .Release.Name }}
    helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    operator: objectscale-operator
    product: objectscale
    release: {{ .Release.Name }}
{{- if .Values.group }}
    group: {{ .Values.group }}
{{- end }}
spec:
{{- if .Values.global.registrySecret }}
  registrySecret: {{ .Values.global.registrySecret }}
  imagePullSecrets:
    - name: {{ .Values.global.registrySecret }}
{{- end }}
{{- if .Values.replicas }}
  replicas: {{ .Values.replicas }}
{{- end }}
  performanceProfile: {{ .Values.performanceProfile }}

{{- if .Values.global.topology.faultDomainKey }}
  topologyFaultDomainKey: {{ .Values.global.topology.faultDomainKey}}
{{- end }}

  {{- include "topologyNodeAffinity" . | indent 2 }}

  atlas:
    replicas: {{ coalesce .Values.atlas.replicas (index (dict "Large" 3) (title .Values.performanceProfile)) 1 }}
    labels:
      component: atlas
      release: {{ .Release.Name }}
{{ include "datasvc-lib.logging-inject-common-labels" . | indent 6}}
{{ include "common-lib.labels-sp-integrated-all" . | indent 6}}
    pod:
      annotations:
{{ include "common-lib.vsphere-emm-integrated_annotation" . | indent 8}}
      release: {{ .Release.Name }}
    image:
      repository: {{ .Values.global.registry }}/{{ .Values.atlas.image.repository }}
      tag: {{ default .Values.tag .Values.atlas.image.tag }}
      pullPolicy: {{ default .Values.pullPolicy .Values.atlas.image.pullPolicy }}
    persistence:
      spec:
        {{- if or .Values.storageClassName .Values.atlas.persistence.storageClassName}}
        storageClassName: {{ default .Values.storageClassName .Values.atlas.persistence.storageClassName }}
        {{- end }}
        resources:
          requests:
            storage: {{ required "atlas.persistence.size is required" .Values.atlas.persistence.size }}

  chunkManager:
{{ include "datasvc-lib.common-labels" . | indent 4 }}
{{- if .Values.chunkManager.replicas }}
    replicas: {{ .Values.chunkManager.replicas }}
{{- end }}
    image:
      repository: {{ .Values.global.registry }}/{{ .Values.chunkManager.image.repository }}
{{- if .Values.chunkManager.image.tag }}
      tag: {{ .Values.chunkManager.image.tag }}
{{- else }}
      tag: {{ .Values.tag }}
{{- end }}
{{- if .Values.chunkManager.image.pullPolicy }}
      pullPolicy: {{ .Values.chunkManager.image.pullPolicy }}
{{- else }}
      pullPolicy: {{ .Values.pullPolicy }}
{{- end }}

  blob:
{{ include "datasvc-lib.common-labels" . | indent 4 }}
{{- if .Values.blob.replicas }}
    replicas: {{ .Values.blob.replicas }}
{{- end }}
    image:
      repository: {{ .Values.global.registry }}/{{ .Values.blob.image.repository }}
{{- if .Values.blob.image.tag }}
      tag: {{ .Values.blob.image.tag }}
{{- else }}
      tag: {{ .Values.tag }}
{{- end }}
{{- if .Values.blob.image.pullPolicy }}
      pullPolicy: {{ .Values.blob.image.pullPolicy }}
{{- else }}
      pullPolicy: {{ .Values.pullPolicy }}
{{- end }}

  objectsvc:
{{ include "datasvc-lib.common-labels" . | indent 4 }}
{{- if .Values.objectsvc.replicas }}
    replicas: {{ .Values.objectsvc.replicas }}
{{- end }}
    image:
      repository: {{ .Values.global.registry }}/{{ .Values.objectsvc.image.repository }}
{{- if .Values.objectsvc.image.tag }}
      tag: {{ .Values.objectsvc.image.tag }}
{{- else }}
      tag: {{ .Values.tag }}
{{- end }}
{{- if .Values.objectsvc.image.pullPolicy }}
      pullPolicy: {{ .Values.objectsvc.image.pullPolicy }}
{{- else }}
      pullPolicy: {{ .Values.pullPolicy }}
{{- end }}

  ons:
{{ include "datasvc-lib.common-labels" . | indent 4 }}
{{- if .Values.ons.replicas }}
    replicas: {{ .Values.ons.replicas }}
{{- end }}
    image:
      repository: {{ .Values.global.registry }}/{{ .Values.ons.image.repository }}
{{- if .Values.ons.image.tag }}
      tag: {{ .Values.ons.image.tag }}
{{- else }}
      tag: {{ .Values.tag }}
{{- end }}
{{- if .Values.ons.image.pullPolicy }}
      pullPolicy: {{ .Values.ons.image.pullPolicy }}
{{- else }}
      pullPolicy: {{ .Values.pullPolicy }}
{{- end }}

  nds:
{{ include "datasvc-lib.common-labels" . | indent 4 }}
{{- if .Values.nds.replicas }}
    replicas: {{ .Values.nds.replicas }}
{{- end }}
    image:
      repository: {{ .Values.global.registry }}/{{ .Values.nds.image.repository }}
{{- if .Values.nds.image.tag }}
      tag: {{ .Values.nds.image.tag }}
{{- else }}
      tag: {{ .Values.tag }}
{{- end }}
{{- if .Values.nds.image.pullPolicy }}
      pullPolicy: {{ .Values.nds.image.pullPolicy }}
{{- else }}
      pullPolicy: {{ .Values.pullPolicy }}
{{- end }}

  objectStoreMetering:
{{ include "datasvc-lib.common-labels" . | indent 4 }}
{{- if .Values.objectStoreMetering.replicas }}
    replicas: {{ .Values.objectStoreMetering.replicas }}
{{- end }}
    image:
      repository: {{ .Values.global.registry }}/{{ .Values.objectStoreMetering.image.repository }}
{{- if .Values.objectStoreMetering.image.tag }}
      tag: {{ .Values.objectStoreMetering.image.tag }}
{{- else }}
      tag: {{ .Values.tag }}
{{- end }}
{{- if .Values.objectStoreMetering.image.pullPolicy }}
      pullPolicy: {{ .Values.objectStoreMetering.image.pullPolicy }}
{{- else }}
      pullPolicy: {{ .Values.pullPolicy }}
{{- end }}


  rep:
{{ include "datasvc-lib.common-labels" . | indent 4 }}
{{- if .Values.rep.replicas }}
    replicas: {{ .Values.rep.replicas }}
{{- end }}
    image:
      repository: {{ .Values.global.registry }}/{{ .Values.rep.image.repository }}
{{- if .Values.rep.image.tag }}
      tag: {{ .Values.rep.image.tag }}
{{- else }}
      tag: {{ .Values.tag }}
{{- end }}
{{- if .Values.rep.image.pullPolicy }}
      pullPolicy: {{ .Values.rep.image.pullPolicy }}
{{- else }}
      pullPolicy: {{ .Values.pullPolicy }}
{{- end }}

  zookeeper:
{{- if .Values.zookeeper.replicas }}
    replicas: {{ .Values.zookeeper.replicas }}
{{- end }}
    pod: 
      serviceAccountName: {{.Release.Name}}-storageserver
      annotations:
{{ include "common-lib.vsphere-emm-integrated_annotation" . | indent 8}}
{{- if or (eq .Values.zookeeper.enableAntiAffinity true) (or (and .Values.global.topology.excludedFaultDomains .Values.global.topology.faultDomainKey) .Values.global.topology.nodeSelector) }}
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - {{ .Release.Name }}-zookeeper
            topologyKey: kubernetes.io/hostname
        {{- include "nodeAffinity" . | indent 8 }}
{{- end }}
    labels:
      app: zookeeper
      component: zk
      release: {{ .Release.Name }}
{{ include "datasvc-lib.logging-inject-common-labels" . | indent 6}}
{{ include "common-lib.labels-sp-integrated-all" . | indent 6}}
{{ include "common-lib.labels-sp-integrated-initiate-decommission-script" (dict "script" "zk-sp.sh_-t_recover") | indent 6}}
{{ include "common-lib.labels-sp-integrated-recovery-status-script" (dict "script" "zk-sp.sh_-t_precheck") | indent 6}}
    image:
      repository: {{ .Values.global.registry }}/{{ .Values.zookeeper.image.repository }}
      tag: {{ .Values.zookeeper.image.tag }}
{{- if .Values.zookeeper.image.pullPolicy }}
      pullPolicy: {{ .Values.zookeeper.image.pullPolicy }}
{{- else }}
      pullPolicy: {{ .Values.pullPolicy }}
{{- end }}
    volumes:
      - name: log
        emptyDir:
          medium: ""
      - name: heap-dump
        emptyDir:
          medium: ""
    volumeMounts:
      - name: log
        mountPath: /opt/zookeeper/logs
      - name: heap-dump
        mountPath: /crash-dump
    persistence:
      spec:
{{- if .Values.zookeeper.persistence.storageClassName }}
        storageClassName: {{ .Values.zookeeper.persistence.storageClassName }}
{{- else if .Values.storageClassName }}
        storageClassName: {{ .Values.storageClassName }}
{{- end }}
        resources:
          requests:
            storage: {{ .Values.zookeeper.persistence.size }}

  bookkeeper:
    {{- if .Values.bookkeeper.replicas }}
    replicas: {{ .Values.bookkeeper.replicas }}
    {{- end }}
    image:
      imageSpec:
        repository: "{{ .Values.global.registry }}/{{ .Values.bookkeeperRepository }}"
        pullPolicy: {{ with .Values.bookkeeper.image }}{{ .pullPolicy }}{{ end }}
    {{- if .Values.bookkeeper.image.tag }}
    version: {{ .Values.bookkeeper.image.tag }}
    {{- else }}
    version: {{ .Values.tag }}
    {{- end }}
{{- if .Values.bookkeeper.disableAntiAffinity }}
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: component
                  operator: In
                  values:
                    - bookie
              topologyKey: kubernetes.io/hostname
{{- end }}
    blockOwnerDeletion:  {{ .Values.bookkeeper.blockOwnerDeletion }}
    labels:
{{ include "datasvc-lib.logging-inject-common-labels" . | indent 6}}
{{ include "common-lib.labels-sp-integrated-all" . | indent 6}}
{{ include "common-lib.labels-sp-integrated-initiate-decommission-script" (dict "script" "bk-sp.sh_-t_recover_-o_600") | indent 6}}
{{ include "common-lib.labels-sp-integrated-recovery-status-script" (dict "script" "bk-sp.sh_-t_precheck_-o_600") | indent 6}}
    annotations:
{{ include "common-lib.vsphere-emm-integrated_annotation" . | indent 6}}
    serviceAccountName:  {{ .Release.Name }}-pravega
    autoRecovery: {{ .Values.bookkeeper.autoRecovery }}
    {{- if .Values.bookkeeper.probes }}
    probes:
      {{- if .Values.bookkeeper.probes.readiness }}
      readinessProbe:
        initialDelaySeconds: {{ .Values.bookkeeper.probes.readiness.initialDelaySeconds | default 20 }}
        periodSeconds: {{ .Values.bookkeeper.probes.readiness.periodSeconds | default 10 }}
        failureThreshold: {{ .Values.bookkeeper.probes.readiness.failureThreshold | default 9 }}
        successThreshold: {{ .Values.bookkeeper.probes.readiness.successThreshold | default 1 }}
        timeoutSeconds: {{ .Values.bookkeeper.probes.readiness.timeoutSeconds | default 5 }}
      {{- end }}
      {{- if .Values.bookkeeper.probes.liveness }}
      livenessProbe:
        initialDelaySeconds: {{ .Values.bookkeeper.probes.liveness.initialDelaySeconds | default 60 }}
        periodSeconds: {{ .Values.bookkeeper.probes.liveness.periodSeconds | default 15 }}
        failureThreshold: {{ .Values.bookkeeper.probes.liveness.failureThreshold | default 4 }}
        successThreshold: {{ .Values.bookkeeper.probes.liveness.successThreshold | default 1 }}
        timeoutSeconds: {{ .Values.bookkeeper.probes.liveness.timeoutSeconds | default 5 }}
      {{- end }}
    {{- end }}
    storage:
      ledgerVolumeClaimTemplate:
        accessModes: [ "ReadWriteOnce" ]
        {{- if .Values.bookkeeper.storage.ledger.storageClassName }}
        storageClassName: {{ .Values.bookkeeper.storage.ledger.storageClassName }}
        {{- end }}
        resources:
          requests:
            storage: {{ .Values.bookkeeper.storage.ledger.volumeSize }}
      journalVolumeClaimTemplate:
        accessModes: [ "ReadWriteOnce" ]
        {{- if .Values.bookkeeper.storage.journal.storageClassName }}
        storageClassName: {{ .Values.bookkeeper.storage.journal.storageClassName }}
        {{- end }}
        resources:
          requests:
            storage: {{ .Values.bookkeeper.storage.journal.volumeSize }}
      indexVolumeClaimTemplate:
        accessModes: [ "ReadWriteOnce" ]
        {{- if .Values.bookkeeper.storage.index.storageClassName }}
        storageClassName: {{ .Values.bookkeeper.storage.index.storageClassName }}
        {{- end }}
        resources:
          requests:
            storage: {{ .Values.bookkeeper.storage.index.volumeSize }}
    options:
      log.level: {{ .Values.bookkeeper.options.log.level }}
      emptyDirVolumeMounts: {{ .Values.bookkeeper.options.emptyDirVolumeMounts }}
      {{- if .Values.bookkeeper.options.configMapVolumeMountsLog }}
      configMapVolumeMounts: "{{.Release.Name}}-bk-log4j2{{.Values.bookkeeper.options.configMapVolumeMountsLog}},{{.Release.Name}}-bk-sp-log4j2{{.Values.bookkeeper.options.configMapVolumeMountsSP}}"
      {{ end }}

  pravega:
    {{- if .Values.pravega.image.tag }}
    version: {{ .Values.pravega.image.tag }}
    {{- else }}
    version: {{ .Values.tag }}
    {{- end }}
    externalAccess:
      enabled: {{ .Values.pravega.externalAccess.enabled }}
      {{ if .Values.pravega.externalAccess.type }}
      type: {{ .Values.pravega.externalAccess.type }}
      {{ end }}
      {{ if .Values.pravega.externalAccess.domainName }}
      domainName: {{ .Values.pravega.externalAccess.domainName }}
      {{ end }}
    pravega:
      {{- if .Values.pravega.controller.service.type }}
      controllerExtServiceType: {{ .Values.pravega.controller.service.type }}
      {{- end }}
      {{- if .Values.pravega.segmentStore.service.type }}
      segmentStoreExtServiceType: {{ .Values.pravega.segmentStore.service.type }}
      {{- end }}
      image:
        repository: "{{ .Values.global.registry }}/{{ .Values.pravegaRepository }}"
        pullPolicy: {{ .Values.pullPolicy }}
      {{- if .Values.pravega.controller.replicas }}
      controllerReplicas: {{ .Values.pravega.controller.replicas }}
      {{- end }}
      {{- if .Values.pravega.segmentStore.replicas }}
      segmentStoreReplicas: {{ .Values.pravega.segmentStore.replicas }}
      {{- end }}
      controllerPodLabels:
{{ include "datasvc-lib.logging-inject-common-labels" . | indent 8}}
{{ include "common-lib.labels-sp-integrated-all" . | indent 8}}
{{ include "common-lib.labels-sp-integrated-ignore-checks" (dict "checks" "TMM-PodsAreReadyPostCheck") | indent 8}}
      segmentStorePodLabels:
{{ include "datasvc-lib.logging-inject-common-labels" . | indent 8}}
{{ include "common-lib.labels-sp-integrated-all" . | indent 8}}
{{ include "common-lib.labels-sp-integrated-ignore-checks" (dict "checks" "TMM-PodsAreReadyPostCheck") | indent 8}}
      segmentStorePodAnnotations:
{{ include "common-lib.vsphere-emm-integrated_annotation" . | indent 8}}
      controllerPodAnnotations:
{{ include "common-lib.vsphere-emm-integrated_annotation" . | indent 8}}
      options:
        controller.metrics.influxDB.connect.db.name: {{ .Values.pravega.options.metrics.influxDBName }}
        metrics.influxDB.connect.db.name: {{ .Values.pravega.options.metrics.influxDBName }}
        metrics.influxDB.reporter.enable: {{ .Values.global.monitoring.enabled | quote }}
        metrics.statistics.enable: {{ .Values.global.monitoring.enabled | quote }}
        controller.metrics.influxDB.reporter.enable: {{ .Values.global.monitoring.enabled | quote }}
        controller.metrics.statistics.enable: {{ .Values.global.monitoring.enabled | quote }}
        emptyDirVolumeMounts: {{ .Values.pravega.options.emptyDirVolumeMounts }}
        {{- if .Values.pravega.options.configMapVolumeMounts }}
        configMapVolumeMounts: {{$.Release.Name}}-prvg-{{ .Values.pravega.options.configMapVolumeMounts }}
        {{- end }}
      debugLogging: {{ .Values.pravega.debugLogging }}
      controllerServiceAccountName: {{ .Release.Name }}-pravega
      segmentStoreServiceAccountName: {{ .Release.Name }}-pravega
      {{- if eq .Values.pravega.controller.enableAntiAffinity true }}
      controllerPodAffinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: component
                operator: In
                values:
                - pravega-controller
              - key: pravega_cluster
                operator: In
                values:
                - {{ .Release.Name }}-pvg
            topologyKey: kubernetes.io/hostname
        {{- include "nodeAffinity" . | indent 8 }}
      {{- end }}
      {{- if eq .Values.pravega.segmentStore.enableAntiAffinity true }}
      segmentStorePodAffinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: component
                operator: In
                values:
                - pravega-segmentstore
              - key: pravega_cluster
                operator: In
                values:
                - {{ .Release.Name }}-pvg
            topologyKey: kubernetes.io/hostname
        {{- include "nodeAffinity" . | indent 8 }}
      {{- end }}

  storageServer:
    serviceAccount: {{ .Release.Name }}-storageserver
{{ include "datasvc-lib.common-labels" . | indent 4 }}
{{- if .Values.storageServer.replicas }}
    replicas: {{ .Values.storageServer.replicas }}
{{- end }}

    image:
      repository: {{ .Values.global.registry }}/{{ .Values.storageServer.image.repository }}
{{- if .Values.storageServer.image.tag }}
      tag: {{ .Values.storageServer.image.tag }}
{{- else }}
      tag: {{ .Values.tag }}
{{- end }}
{{- if .Values.storageServer.image.pullPolicy }}
      pullPolicy: {{ .Values.storageServer.image.pullPolicy }}
{{- else }}
      pullPolicy: {{ .Values.pullPolicy }}
{{- end }}

    volumes:
{{- if .Values.storageServer.persistence.protected }}
      protected: {{ .Values.storageServer.persistence.protected }}
{{- end }}
{{- if .Values.storageServer.persistence.collocated }}
      collocated: {{ .Values.storageServer.persistence.collocated }}
{{- end }}
{{- if .Values.storageServer.persistence.erasureCoding }}
      erasureCoding:
{{- if .Values.storageServer.persistence.erasureCoding.dataBlocks }}
        dataBlocks: {{ .Values.storageServer.persistence.erasureCoding.dataBlocks }}
{{- end }}
{{- if .Values.storageServer.persistence.erasureCoding.codeBlocks }}
        codeBlocks: {{ .Values.storageServer.persistence.erasureCoding.codeBlocks }}
{{- end }}
{{- end }}
      volumesCount: {{ .Values.storageServer.persistence.volumesCount }}
{{- if .Values.storageServer.persistence.storageClassName }}
      storageClassName: {{ .Values.storageServer.persistence.storageClassName }}
{{- else if .Values.storageClassName }}
      storageClassName: {{ .Values.storageClassName }}
{{- end }}
      resources:
        requests:
          storage: {{ .Values.storageServer.persistence.size }}

  storageServerManager:
{{ include "datasvc-lib.common-labels" . | indent 4 }}
{{- if .Values.storageServerManager.replicas }}
    replicas: {{ .Values.storageServerManager.replicas }}
{{- end }}

    image:
      repository: {{ .Values.global.registry }}/{{ .Values.storageServerManager.image.repository }}
{{- if .Values.storageServerManager.image.tag }}
      tag: {{ .Values.storageServerManager.image.tag }}
{{- else }}
      tag: {{ .Values.tag }}
{{- end }}
{{- if .Values.storageServerManager.image.pullPolicy }}
      pullPolicy: {{ .Values.storageServerManager.image.pullPolicy }}
{{- else }}
      pullPolicy: {{ .Values.pullPolicy }}
{{- end }}

  recordManager:
{{ include "datasvc-lib.common-labels" . | indent 4 }}
{{- if .Values.recordManager.replicas }}
    replicas: {{ .Values.recordManager.replicas }}
{{- end }}

    image:
      repository: {{ .Values.global.registry }}/{{ .Values.recordManager.image.repository }}
{{- if .Values.recordManager.image.tag }}
      tag: {{ .Values.recordManager.image.tag }}
{{- else }}
      tag: {{ .Values.tag }}
{{- end }}
{{- if .Values.recordManager.image.pullPolicy }}
      pullPolicy: {{ .Values.recordManager.image.pullPolicy }}
{{- else }}
      pullPolicy: {{ .Values.pullPolicy }}
{{- end }}

  storageManagement:
{{ include "datasvc-lib.common-labels" . | indent 4 }}
{{- if .Values.storageManagement.replicas }}
    replicas: {{ .Values.storageManagement.replicas }}
{{- end }}

    image:
      repository: {{ .Values.global.registry }}/{{ .Values.storageManagement.image.repository }}
{{- if .Values.storageManagement.image.tag }}
      tag: {{ .Values.storageManagement.image.tag }}
{{- else }}
      tag: {{ .Values.tag }}
{{- end }}
{{- if .Values.storageManagement.image.pullPolicy }}
      pullPolicy: {{ .Values.storageManagement.image.pullPolicy }}
{{- else }}
      pullPolicy: {{ .Values.pullPolicy }}
{{- end }}

  metering:
{{ include "datasvc-lib.common-labels" . | indent 4 }}
{{- if .Values.metering.replicas }}
    replicas: {{ .Values.metering.replicas }}
{{- end }}

    image:
      repository: {{ .Values.global.registry }}/{{ .Values.metering.image.repository }}
{{- if .Values.metering.image.tag }}
      tag: {{ .Values.metering.image.tag }}
{{- else }}
      tag: {{ .Values.tag }}
{{- end }}
{{- if .Values.metering.image.pullPolicy }}
      pullPolicy: {{ .Values.metering.image.pullPolicy }}
{{- else }}
      pullPolicy: {{ .Values.pullPolicy }}
{{- end }}

  event:
{{ include "datasvc-lib.common-labels" . | indent 4 }}
{{- if .Values.event.replicas }}
    replicas: {{ .Values.event.replicas }}
  {{- end }}

    image:
      repository: {{ .Values.global.registry }}/{{ .Values.event.image.repository }}
{{- if .Values.event.image.tag }}
      tag: {{ .Values.event.image.tag }}
{{- else }}
      tag: {{ .Values.tag }}
  {{- end }}
{{- if .Values.event.image.pullPolicy }}
      pullPolicy: {{ .Values.event.image.pullPolicy }}
{{- else }}
      pullPolicy: {{ .Values.pullPolicy }}
  {{- end }}
    pod:
      env:
        - name: "EVENTSVC_APP_NAME"
          value: "{{ .Release.Name }}"
        - name: "NAMESPACE"
          value: "{{ .Release.Namespace }}"

  resource:
{{ include "datasvc-lib.common-labels" . | indent 4 }}
{{- if .Values.resource.replicas }}
    replicas: {{ .Values.resource.replicas }}
{{- end }}

    image:
      repository: {{ .Values.global.registry }}/{{ .Values.resource.image.repository }}
{{- if .Values.resource.image.tag }}
      tag: {{ .Values.resource.image.tag }}
{{- else }}
      tag: {{ .Values.tag }}
{{- end }}
{{- if .Values.resource.image.pullPolicy }}
      pullPolicy: {{ .Values.resource.image.pullPolicy }}
{{- else }}
      pullPolicy: {{ .Values.pullPolicy }}
{{- end }}


  controlPlane:
{{ include "datasvc-lib.common-labels" . | indent 4 }}
{{- if .Values.controlPlane.replicas }}
    replicas: {{ .Values.controlPlane.replicas }}
{{- end }}

    image:
      repository: {{ .Values.global.registry }}/{{ .Values.controlPlane.image.repository }}
{{- if .Values.controlPlane.image.tag }}
      tag: {{ .Values.controlPlane.image.tag }}
{{- else }}
      tag: {{ .Values.tag }}
{{- end }}
{{- if .Values.controlPlane.image.pullPolicy }}
      pullPolicy: {{ .Values.controlPlane.image.pullPolicy }}
{{- else }}
      pullPolicy: {{ .Values.pullPolicy }}
{{- end }}

  diagnostic:
{{ include "datasvc-lib.common-labels" . | indent 4 }}
{{- if .Values.diagnostic.replicas }}
    replicas: {{ .Values.diagnostic.replicas }}
{{- end }}

    image:
      repository: {{ .Values.global.registry }}/{{ .Values.diagnostic.image.repository }}
{{- if .Values.diagnostic.image.tag }}
      tag: {{ .Values.diagnostic.image.tag }}
{{- else }}
      tag: {{ .Values.tag }}
{{- end }}
{{- if .Values.diagnostic.image.pullPolicy }}
      pullPolicy: {{ .Values.diagnostic.image.pullPolicy }}
{{- else }}
      pullPolicy: {{ .Values.pullPolicy }}
{{- end }}
{{- if .Values.diagnostic.service }}
    service:
      {{ toYaml .Values.diagnostic.service | nindent 6 | trim }}
{{- end }}

  geoService:
{{ include "datasvc-lib.common-labels" . | indent 4 }}
    {{- if .Values.geoService.replicas }}
    replicas: {{ .Values.geoService.replicas }}
    {{- end }}
    image:
      repository: {{ .Values.global.registry }}/{{ .Values.geoService.image.repository }}
      {{- if .Values.geoService.image.tag }}
      tag: {{ .Values.geoService.image.tag }}
      {{- else }}
      tag: {{ .Values.tag }}
      {{- end }}
      {{- if .Values.geoService.image.pullPolicy }}
      pullPolicy: {{ .Values.geoService.image.pullPolicy }}
      {{- else }}
      pullPolicy: {{ .Values.pullPolicy }}
  {{- end }}

  geoReceiver:
{{ include "datasvc-lib.common-labels" . | indent 4 }}
{{- if .Values.geoReceiver.replicas }}
    replicas: {{ .Values.geoReceiver.replicas }}
{{- end }}

    image:
      repository: {{ .Values.global.registry }}/{{ .Values.geoReceiver.image.repository }}
{{- if .Values.geoReceiver.image.tag }}
      tag: {{ .Values.geoReceiver.image.tag }}
{{- else }}
      tag: {{ .Values.tag }}
{{- end }}
{{- if .Values.geoReceiver.image.pullPolicy }}
      pullPolicy: {{ .Values.geoReceiver.image.pullPolicy }}
{{- else }}
      pullPolicy: {{ .Values.pullPolicy }}
{{- end }}
{{- if .Values.geoReceiver.service }}
    service:
      {{ toYaml .Values.geoReceiver.service | nindent 6 | trim }}
{{- end }}
{{- if .Values.geoReceiver.tls }}
    tls:
      {{ toYaml .Values.geoReceiver.tls | nindent 6 | trim }}
{{- end }}

  spaceReclaimer:
{{ include "datasvc-lib.common-labels" . | indent 4 }}
{{- if .Values.spaceReclaimer.replicas }}
    replicas: {{ .Values.spaceReclaimer.replicas }}
{{- end }}

    image:
      repository: {{ .Values.global.registry }}/{{ .Values.spaceReclaimer.image.repository }}
{{- if .Values.spaceReclaimer.image.tag }}
      tag: {{ .Values.spaceReclaimer.image.tag }}
{{- else }}
      tag: {{ .Values.tag }}
{{- end }}
{{- if .Values.spaceReclaimer.image.pullPolicy }}
      pullPolicy: {{ .Values.spaceReclaimer.image.pullPolicy }}
{{- else }}
      pullPolicy: {{ .Values.pullPolicy }}
{{- end }}

  control:
{{ include "datasvc-lib.common-labels" . | indent 4 }}
{{- if .Values.control.replicas }}
    replicas: {{ .Values.control.replicas }}
{{- end }}

    image:
      repository: {{ .Values.global.registry }}/{{ .Values.control.image.repository }}
{{- if .Values.control.image.tag }}
      tag: {{ .Values.control.image.tag }}
{{- else }}
      tag: {{ .Values.tag }}
{{- end }}
{{- if .Values.control.image.pullPolicy }}
      pullPolicy: {{ .Values.control.image.pullPolicy }}
{{- else }}
      pullPolicy: {{ .Values.pullPolicy }}
{{- end }}

  s3:
{{ include "datasvc-lib.common-labels" . | indent 4 }}
    replicas: {{ default .Values.s3.replicas }}

    image:
      repository: {{ .Values.global.registry }}/{{ .Values.s3.image.repository }}
      tag: {{ default .Values.tag .Values.s3.image.tag }}
      pullPolicy: {{ default .Values.s3.image.pullPolicy .Values.pullPolicy }}

{{- if .Values.s3.service }}
    service:
      {{ toYaml .Values.s3.service | nindent 6 | trim }}
{{- end }}
{{- if .Values.s3.tls }}
    tls:
      {{ toYaml .Values.s3.tls | nindent 6 | trim }}
{{- end }}

  managementGateway:
{{ include "datasvc-lib.common-labels" . | indent 4 }}
{{ include "datasvc-lib.logging-inject-logrotate-labels" . | indent 6 }}
{{- if .Values.managementGateway.replicas }}
    replicas: {{ .Values.managementGateway.replicas }}
{{- end }}
    image:
      repository: {{ .Values.global.registry }}/{{ .Values.managementGateway.image.repository }}
{{- if .Values.managementGateway.image.tag }}
      tag: {{ .Values.managementGateway.image.tag }}
{{- else }}
      tag: {{ .Values.tag }}
{{- end }}
{{- if .Values.managementGateway.image.pullPolicy }}
      pullPolicy: {{ .Values.managementGateway.image.pullPolicy }}
{{- else }}
      pullPolicy: {{ .Values.pullPolicy }}
{{- end }}
{{- if .Values.managementGateway.service }}
    service:
      {{ toYaml .Values.managementGateway.service | nindent 6 | trim }}
{{- end }}
{{- if .Values.managementGateway.tls }}
    tls:
      {{ toYaml .Values.managementGateway.tls | nindent 6 | trim }}
{{- end }}

  provision:
    enabled: {{.Values.provision.enabled }}
    newProvisionAPI: {{.Values.provision.newProvisionAPI}}
    image:
      repository: {{ .Values.global.registry }}/{{ .Values.provision.image.repository }}
{{- if .Values.provision.image.tag }}
      tag: {{ .Values.provision.image.tag }}
{{- else }}
      tag: {{ .Values.tag }}
{{- end }}
{{- if .Values.provision.image.pullPolicy }}
      pullPolicy: {{ .Values.provision.image.pullPolicy }}
{{- else }}
      pullPolicy: {{ .Values.pullPolicy }}
{{- end }}

  expandsp:
    image:
      repository: {{ .Values.global.registry }}/{{ .Values.expandsp.image.repository }}
{{- if .Values.expandsp.image.tag }}
      tag: {{ .Values.expandsp.image.tag }}
{{- else }}
      tag: {{ .Values.tag }}
{{- end }}
{{- if .Values.expandsp.image.pullPolicy }}
      pullPolicy: {{ .Values.expandsp.image.pullPolicy }}
{{- else }}
      pullPolicy: {{ .Values.pullPolicy }}
{{- end }}

  cmfswitch:
    image:
      repository: {{ .Values.global.registry }}/{{ .Values.cmfswitch.image.repository }}
      {{- if .Values.cmfswitch.image.tag }}
      tag: {{ .Values.cmfswitch.image.tag }}
      {{- else }}
      tag: {{ .Values.tag }}
      {{- end }}
      {{- if .Values.cmfswitch.image.pullPolicy }}
      pullPolicy: {{ .Values.cmfswitch.image.pullPolicy }}
      {{- else }}
      pullPolicy: {{ .Values.pullPolicy }}
  {{- end }}

  syslogAgent:
    image:
      repository: {{ .Values.global.registry }}/{{ .Values.syslogAgent.image.repository }}
{{- if .Values.syslogAgent.image.tag }}
      tag: {{ .Values.syslogAgent.image.tag }}
{{- else }}
      tag: {{ .Values.tag }}
{{- end }}
{{- if .Values.syslogAgent.image.pullPolicy }}
      pullPolicy: {{ .Values.syslogAgent.image.pullPolicy }}
{{- else }}
      pullPolicy: {{ .Values.pullPolicy }}
{{- end }}

  fluentbitAgent:
    image:
      repository: {{ .Values.global.registry }}/{{ .Values.fluentbitAgent.image.repository }}
{{- if .Values.fluentbitAgent.image.tag }}
      tag: {{ .Values.fluentbitAgent.image.tag }}
{{- else }}
      tag: {{ .Values.tag }}
{{- end }}
{{- if .Values.fluentbitAgent.image.pullPolicy }}
      pullPolicy: {{ .Values.fluentbitAgent.image.pullPolicy }}
{{- else }}
      pullPolicy: {{ .Values.pullPolicy }}
{{- end }}

  fabricProxy:
    interface: {{ .Values.fabricProxy.interface }}
{{- if .Values.fabricProxy.replicas }}
    replicas: {{ .Values.fabricProxy.replicas }}
{{- end }}
    image:
      repository: {{ .Values.global.registry }}/{{ .Values.fabricProxy.image.repository }}
{{- if .Values.fabricProxy.image.tag }}
      tag: {{ .Values.fabricProxy.image.tag }}
{{- else }}
      tag: {{ .Values.tag }}
{{- end }}
{{- if .Values.fabricProxy.image.pullPolicy }}
      pullPolicy: {{ .Values.fabricProxy.image.pullPolicy }}
{{- else }}
      pullPolicy: {{ .Values.pullPolicy }}
{{- end }}

  enableCRR: {{ .Values.features.enableCRR }}

  enableEphStorage: {{ .Values.features.enableEphStorage }}

  enableObjectStoreMetering: {{ .Values.features.enableObjectStoreMetering }}

  enablePravega: {{ .Values.features.enablePravega }}

  enableNotification: {{ .Values.features.enableNotification }}

  enableRRDriven: {{ .Values.features.enableRRDriven }}
  enableRRDrivenPartialSR: {{ .Values.features.enableRRDrivenPartialSR }}

  objectType: {{ .Values.features.objectType }}

  deploymentDeadlineSeconds: {{ .Values.deploymentDeadlineSeconds }}

{{- end }}
