apiVersion: apps/v1
kind: Deployment
metadata:
  name: kahm
  namespace: {{ .Release.Namespace}}
  labels:
    app.kubernetes.io/instance: {{ .Release.Name }}
    release: {{ .Release.Name }}
spec:
  replicas: 1
  selector:
    matchLabels:
      name: kahm
  strategy:
   type: Recreate
  template:
    metadata:
      labels:
        name: kahm
        app.kubernetes.io/instance: {{ .Release.Name }}
        release: {{ .Release.Name }}
        app: kahm
{{ include "common-lib.labels-sp-integrated-all" . | indent 8}}
      annotations:
{{ include "common-lib.vsphere-emm-integrated_annotation" . | indent 8}}
    spec:
      securityContext:
        fsGroup: 1001
      serviceAccountName: "kahm"
{{- if .Values.global.registrySecret }}
      imagePullSecrets:
        - name: {{ .Values.global.registrySecret }}
{{- end }}
      containers:
      - name: kahm
{{- if .Values.image.tag }}
        image: {{ .Values.global.registry }}/{{ .Values.image.repository }}:{{ .Values.image.tag }}
{{- else }}
        image: {{ .Values.global.registry }}/{{ .Values.image.repository }}:{{ .Values.tag }}
{{- end }}
{{- if .Values.image.pullPolicy }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
{{- else }}
        imagePullPolicy: {{ .Values.pullPolicy }}
{{- end }}
        command:
        - kahm
        ports:
        - containerPort: 60000
          name: metrics
        - containerPort: 17999
          name: rest
{{- if eq .Values.db.dbType "BadgerDB" }}
        volumeMounts:
        - mountPath: /data/db
          name: db
{{- end }}
        {{- if .Values.resources }}
        resources:
{{ toYaml .Values.resources | indent 10 }}
        {{- end }}
        env:
        - name: POD_NAME
          valueFrom:
           fieldRef:
             fieldPath: metadata.name
        - name: MY_POD_IP
          valueFrom:
           fieldRef:
             fieldPath: status.podIP
        - name: WATCH_NAMESPACE
{{- if eq .Values.global.watchAllNamespaces true }}
          value: ""
{{- else }}
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
{{- end }}
{{- if .Values.global.registrySecret }}
        - name: REGISTRY_SECRET
          value: {{ .Values.global.registrySecret }}
{{- end }}
        - name: KAHM_DB_TYPE
          value: {{ .Values.db.dbType }}
        - name: KAHM_DB_EVENT_TTL
          value: "{{ .Values.db.eventTTL }}"
        - name: RELEASE_NAME
          value: {{ .Release.Name }}
        - name: RELEASE_NAMESPACE
          value: {{ .Release.Namespace }}

{{- if eq .Values.db.dbType "PostgresDB" }}
        - name: POSTGRES_DBNAME
          valueFrom:
            secretKeyRef:
              name: {{ .Release.Name }}-postgres-credentials
              key: dbname
        - name: POSTGRES_USERNAME
          valueFrom:
            secretKeyRef:
              name: {{ .Release.Name }}-postgres-credentials
              key: username
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Release.Name }}-postgres-credentials
              key: password
        - name: POSTGRES_PORT
          valueFrom:
            secretKeyRef:
              name: {{ .Release.Name }}-postgres-credentials
              key: port
        - name: POSTGRES_HOSTNAME
          valueFrom:
            secretKeyRef:
              name: {{ .Release.Name }}-postgres-credentials
              key: hostname
        - name: POSTGRES_CREDENTIALS
          valueFrom:
            secretKeyRef:
              name: {{ .Release.Name }}-postgres-credentials
              key: credentials
{{- end }}
      restartPolicy: Always
{{- if eq .Values.db.dbType "BadgerDB" }}
      volumes:
      - name: db
        persistentVolumeClaim:
          claimName: db-kahm-0
{{- end }}
